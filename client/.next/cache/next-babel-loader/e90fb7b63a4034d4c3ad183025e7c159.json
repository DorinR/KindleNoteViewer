{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/DorinsMac/Desktop/Projects/Typescript React Project.nosync/client/src/components/InputField.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/core';\nimport React from 'react';\nimport { useField } from 'formik';\nexport var InputField = function InputField(_ref) {\n  _s();\n\n  var label = _ref.label,\n      size = _ref.size,\n      props = _objectWithoutProperties(_ref, [\"label\", \"size\"]);\n\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      error = _useField2[1].error;\n\n  return __jsx(FormControl, {\n    isInvalid: !!error,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(FormLabel, {\n    htmlFor: field.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, props.label), __jsx(Input, _extends({}, field, props, {\n    id: field.name,\n    placeholder: props.placeholder,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  })), error ? __jsx(FormErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }\n  }, error) : null);\n};\n\n_s(InputField, \"DpPuTb9nPdu6NyyZR63Xu5KSrwc=\", false, function () {\n  return [useField];\n});\n\n_c = InputField;\n\nvar _c;\n\n$RefreshReg$(_c, \"InputField\");","map":{"version":3,"sources":["/Users/DorinsMac/Desktop/Projects/Typescript React Project.nosync/client/src/components/InputField.tsx"],"names":["FormControl","FormErrorMessage","FormLabel","Input","React","useField","InputField","label","size","props","field","error","name","placeholder"],"mappings":";;;;;;;;;AAAA,SAASA,WAAT,EAAsBC,gBAAtB,EAAwCC,SAAxC,EAAmDC,KAAnD,QAAgE,iBAAhE;AACA,OAAOC,KAAP,MAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,QAAzB;AAOA,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAA+B;AAAA;;AAAA,MAA5BC,KAA4B,QAA5BA,KAA4B;AAAA,MAArBC,IAAqB,QAArBA,IAAqB;AAAA,MAAZC,KAAY;;AAAA,kBACrDJ,QAAQ,CAACI,KAAD,CAD6C;AAAA;AAAA,MACzEC,KADyE;AAAA,MAChEC,KADgE,iBAChEA,KADgE;;AAGhF,SACI,MAAC,WAAD;AAAa,IAAA,SAAS,EAAE,CAAC,CAACA,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,SAAD;AAAW,IAAA,OAAO,EAAED,KAAK,CAACE,IAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAiCH,KAAK,CAACF,KAAvC,CADJ,EAEI,MAAC,KAAD,eAAWG,KAAX,EAAsBD,KAAtB;AAA6B,IAAA,EAAE,EAAEC,KAAK,CAACE,IAAvC;AAA6C,IAAA,WAAW,EAAEH,KAAK,CAACI,WAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,EAGKF,KAAK,GAAG,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,KAAnB,CAAH,GAAkD,IAH5D,CADJ;AAOH,CAVM;;GAAML,U;UACkBD,Q;;;KADlBC,U","sourcesContent":["import { FormControl, FormErrorMessage, FormLabel, Input } from '@chakra-ui/core'\nimport React, { InputHTMLAttributes } from 'react'\nimport { useField } from 'formik'\n\ntype InputFieldProps = InputHTMLAttributes<HTMLInputElement> & {\n    label: string\n    name: string\n}\n\nexport const InputField: React.FC<InputFieldProps> = ({ label, size, ...props }) => {\n    const [field, { error }] = useField(props)\n\n    return (\n        <FormControl isInvalid={!!error}>\n            <FormLabel htmlFor={field.name}>{props.label}</FormLabel>\n            <Input {...field} {...props} id={field.name} placeholder={props.placeholder} />\n            {error ? <FormErrorMessage>{error}</FormErrorMessage> : null}\n        </FormControl>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}