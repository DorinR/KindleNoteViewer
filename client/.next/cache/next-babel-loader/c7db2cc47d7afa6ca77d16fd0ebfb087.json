{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectDestructuringEmpty from \"@babel/runtime/helpers/esm/objectDestructuringEmpty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/DorinsMac/Desktop/Projects/Typescript React Project.nosync/client/src/pages/register.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Form, Formik } from 'formik';\nimport { Box, Button } from '@chakra-ui/core';\nimport { Wrapper } from '../components/Wrapper';\nimport { InputField } from '../components/InputField';\nimport { useRegisterMutation } from '../generated/graphql';\nexport var Register = function Register(_ref) {\n  _s();\n\n  _objectDestructuringEmpty(_ref);\n\n  var _useRegisterMutation = useRegisterMutation(),\n      _useRegisterMutation2 = _slicedToArray(_useRegisterMutation, 2),\n      register = _useRegisterMutation2[1];\n\n  return __jsx(Wrapper, {\n    variant: \"regular\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, __jsx(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return register(values);\n\n              case 2:\n                response = _context.sent;\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, function (_ref3) {\n    var isSubmitting = _ref3.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, __jsx(InputField, {\n      name: \"username\",\n      label: \"username\",\n      placeholder: \"username\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }\n    }), __jsx(Box, {\n      mt: 4,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, __jsx(InputField, {\n      name: \"password\",\n      label: \"password\",\n      placeholder: \"password\",\n      type: \"password\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    })), __jsx(Button, {\n      mt: 4,\n      isLoading: isSubmitting,\n      variantColor: \"teal\",\n      type: \"submit\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }\n    }, \"register\"));\n  }));\n};\n\n_s(Register, \"mYy7lIdnWBmFP2V+FDbrcK/cEwQ=\", false, function () {\n  return [useRegisterMutation];\n});\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["/Users/DorinsMac/Desktop/Projects/Typescript React Project.nosync/client/src/pages/register.tsx"],"names":["React","Form","Formik","Box","Button","Wrapper","InputField","useRegisterMutation","Register","register","username","password","values","response","isSubmitting"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,QAA7B;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,iBAA5B;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,mBAAT,QAAoC,sBAApC;AAIA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,OAAQ;AAAA;;AAAA;;AAAA,6BAChCD,mBAAmB,EADa;AAAA;AAAA,MAC5CE,QAD4C;;AAGrD,SACI,MAAC,OAAD;AAAS,IAAA,OAAO,EAAC,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,MAAD;AACI,IAAA,aAAa,EAAE;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B,KADnB;AAEI,IAAA,QAAQ;AAAA,2EAAE,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBH,QAAQ,CAACG,MAAD,CADzB;;AAAA;AACAC,gBAAAA,QADA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAF;;AAAA;AAAA;AAAA;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKK;AAAA,QAAGC,YAAH,SAAGA,YAAH;AAAA,WACG,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAC,UAAlC;AAA6C,MAAA,WAAW,EAAC,UAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,MAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,MAAC,UAAD;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAC,UAAlC;AAA6C,MAAA,WAAW,EAAC,UAAzD;AAAoE,MAAA,IAAI,EAAC,UAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAFJ,EAKI,MAAC,MAAD;AAAQ,MAAA,EAAE,EAAE,CAAZ;AAAe,MAAA,SAAS,EAAEA,YAA1B;AAAwC,MAAA,YAAY,EAAC,MAArD;AAA4D,MAAA,IAAI,EAAC,QAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CADH;AAAA,GALL,CADJ,CADJ;AAqBH,CAxBM;;GAAMN,Q;UACYD,mB;;;KADZC,Q;AA0Bb,eAAeA,QAAf","sourcesContent":["import React from 'react'\nimport { Form, Formik } from 'formik'\nimport { Box, Button } from '@chakra-ui/core'\nimport { Wrapper } from '../components/Wrapper'\nimport { InputField } from '../components/InputField'\nimport { useRegisterMutation } from '../generated/graphql'\n\ninterface registerProps {}\n\nexport const Register: React.FC<registerProps> = ({}) => {\n    const [, register] = useRegisterMutation()\n\n    return (\n        <Wrapper variant='regular'>\n            <Formik\n                initialValues={{ username: '', password: '' }}\n                onSubmit={async (values) => {\n                    const response = await register(values)\n                }}>\n                {({ isSubmitting }) => (\n                    <Form>\n                        <InputField name='username' label='username' placeholder='username' />\n                        <Box mt={4}>\n                            <InputField name='password' label='password' placeholder='password' type='password' />\n                        </Box>\n                        <Button mt={4} isLoading={isSubmitting} variantColor='teal' type='submit'>\n                            register\n                        </Button>\n                    </Form>\n                )}\n            </Formik>\n        </Wrapper>\n    )\n}\n\nexport default Register\n"]},"metadata":{},"sourceType":"module"}